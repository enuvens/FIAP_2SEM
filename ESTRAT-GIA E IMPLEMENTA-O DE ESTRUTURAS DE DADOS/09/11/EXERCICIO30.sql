/*
EXERCICIO 01
*/
SELECT 
 SUM(QT_ESTOQUE * VL_PRECO_UNITARIO) "VALOR TOTAL EM ESTOQUE" 
FROM 
T_SPV_PRODUTO;

/*
EXERCICIO 02
RECUPERE A NOTA FISCAL DE MAIOR VALOR.
MOSTRE A NOTA FISCAL DE MAIOR VALOR, UTILIZE O APELIDO "NF DE MAIOR VALOR".
UTILIZE A FUNÇÃO DE GRUPO: MAX()
*/
SELECT
  MAX(VL_TOTAL_NF) "NF DE MAIOR VALOR"
FROM
  T_SPV_NOTA_FISCAL;

/*
EXERCICIO 03
RECUPERE A NOTA FISCAL DE MENOR VALOR.
MOSTRE A NOTA FISCAL DE MENOR VALOR, UTILIZE O APELIDO "NF DE MENOR VALOR".
UTILIZE A FUNÇÃO DE GRUPO: MIN()
*/
SELECT
  MIN(VL_TOTAL_NF) "NF DE MENOR VALOR"
FROM
  T_SPV_NOTA_FISCAL;

/* 
EXERCICIO 04
RECUPERE A MÉDIA DOS PERCENTUAIS DE DESCONTO APLICADOS AS NOTAS FISCAIS.
MOSTRE O PERCENTUAL MÉDIO DE DESCONTO, UTILIZE O APELIDO "VALOR MÉDIO DE DESCONTO".
UTILIZE A FUNÇÃO DE GRUPO: AVG()
SELECT * FROM T_SPV_NOTA_FISCAL
*/
SELECT
  AVG(VL_DESCONTO) "VALOR MÉDIO DE DESCONTO"
FROM
  T_SPV_NOTA_FISCAL;

/*
EXERCICIO 05
RECUPERE O VALOR MÉDIO DAS VENDAS (VALOR DAS NOTAS FISCAIS).
MOSTRE O VALOR MÉDIO DAS NOTAS FISCAIS, UTILIZE O APELIDO "VALOR MÉDIO DAS VENDAS".
UTILIZE A FUNÇÃO DE GRUPO: AVG()
*/
SELECT
  AVG(VL_TOTAL_NF) "VALOR MÉDIO DAS VENDAS"
FROM
  T_SPV_NOTA_FISCAL;
  
/*
EXERCICIO 06
RECUPERE A QUANTIDADE DE NOTAS FISCAIS POR CLIENTE.
MOSTRE O TOTAL DE NOTAS FISCAIS ADQUIRIDAS POR CADA CLIENTE.
UTILIZE OS APELIDOS:
- CÓDIGO DO CLIENTE "COD.CLIENTE"
- NOME DO CLIENTE "CLIENTE"
- CONTAGEM DE NOTAS FISCAIS "QTDE. NOTA FISCAL POR CLIENTE"
UTILIZE A FUNÇÃO DE GRUPO: COUNT()
CRIE AGRUPAMENTOS POR CLIENTE.
SELECT * FROM T_SPV_NOTA_FISCAL;
SELECT * FROM T_SPV_CLIENTE;
*/
SELECT
  C.CD_CLIENTE "COD.CLIENTE",
  C.NM_CLIENTE "CLIENTE",
  COUNT(N.NR_NOTA_FISCAL) "QTDE. NOTA FISCAL POR CLIENTE"
FROM T_SPV_NOTA_FISCAL N INNER JOIN T_SPV_CLIENTE C ON (C.CD_CLIENTE = N.CD_CLIENTE)
GROUP BY C.CD_CLIENTE, C.NM_CLIENTE;

/*
EXERCICIO 07
RECUPERE A QUANTIDADE DE NOTAS FISCAIS POR CLIENTE.
MOSTRE O TOTAL DE NOTAS FISCAIS ADQUIRIDAS POR CADA CLIENTE. MOSTRE APENAS OS CLIENTES COM 1 OU
MAIS NOTAS FISCAIS.
UTILIZE OS APELIDOS:
- CÓDIGO DO CLIENTE "COD.CLIENTE"
- NOME DO CLIENTE "CLIENTE"
- CONTAGEM DE NOTAS FISCAIS "QTDE. NOTA FISCAL POR CLIENTE"
UTILIZE A FUNÇÃO DE GRUPO: COUNT()
UTILIZE A CLÁUSULA HAVING PARA FILTRAR A QUANTIDADE DE NOTAS FISCAIS POR CLIENTE.
CRIE AGRUPAMENTOS POR CLIENTE.
*/

SELECT
  C.CD_CLIENTE "COD.CLIENTE",
  C.NM_CLIENTE "CLIENTE",
  COUNT(N.NR_NOTA_FISCAL) "QTDE. NOTA FISCAL POR CLIENTE"
FROM T_SPV_NOTA_FISCAL N INNER JOIN T_SPV_CLIENTE C ON (C.CD_CLIENTE = N.CD_CLIENTE)
GROUP BY C.CD_CLIENTE, C.NM_CLIENTE
HAVING COUNT(N.NR_NOTA_FISCAL) >= 1;

/*
EXERCICIO 08
RECUPERE A QUANTIDADE DE NOTAS FISCAIS EMITIDAS EM AGOSTO/2014.
MOSTRE A QUANTIDADE DE NOTAS FISCAIS EMITIDAS. UTILIZE O APELIDO "NOTAS EMITIDAS EM AGOSTO/2014".
UTILIZE A FUNÇÃO DE GRUPO: COUNT()
*/
SELECT 
  COUNT(*) "NOTAS EMITIDAS EM AGOSTO/2014"
FROM 
  T_SPV_NOTA_FISCAL
WHERE
  DT_EMISSAO BETWEEN TO_DATE('01/08/2014', 'DD/MM/YYYY') AND TO_DATE('31/08/2014', 'DD/MM/YYYY');
  
/*
EXERCICIO 09
RECUPERE O MONTANTE GASTO POR CLIENTE.
MOSTRE O MONTANTE GASTO. UTILIZE O APELIDO "MONTANTE GASTO POR CLIENTE".
MONTANTE É A SOMATÓRIA DOS VALORES TOTAIS DAS NOTAS FISCAIS ADQUIRIDAS PELOS CLIENTES.
UTILIZE A FUNÇÃO DE GRUPO: SUM()
CRIE AGRUPAMENTOS POR CLIENTE.
*/
SELECT
  C.CD_CLIENTE "COD.CLIENTE",
  C.NM_CLIENTE "CLIENTE",
  SUM(N.VL_TOTAL_NF) "MONTANTE GASTO POR CLIENTE"
FROM T_SPV_NOTA_FISCAL N INNER JOIN T_SPV_CLIENTE C ON (C.CD_CLIENTE = N.CD_CLIENTE)
GROUP BY C.CD_CLIENTE, C.NM_CLIENTE;

/*
EXERCICIO 10
RECUPERE O TOTAL DE DESCONTO CONCEDIDO POR CLIENTE. UTILIZE O APELIDO "TOT. DESC.
CONCEDIDO/CLIENTE".
O VALOR DO DESCONTO É OBTIDO PELO CÁLCULO: (VALOR TOTAL NF * PERCENTUAL DE DESCONTO) / 100.
O TOTAL DE DESCONTO É A SOMATÓRIA DOS VALORES DE DESCONTO CONCEDIDOS A CADA CLIENTE.
UTILIZE A FUNÇÃO DE GRUPO: SUM()
CRIE AGRUPAMENTOS POR CLIENTE.
*/
SELECT
  C.CD_CLIENTE "COD.CLIENTE",
  C.NM_CLIENTE "CLIENTE",
  SUM((N.VL_TOTAL_NF * N.VL_DESCONTO) / 100) "TOT. DESC. CONCEDIDO/CLIENTE"
FROM T_SPV_NOTA_FISCAL N INNER JOIN T_SPV_CLIENTE C ON (C.CD_CLIENTE = N.CD_CLIENTE)
GROUP BY C.CD_CLIENTE, C.NM_CLIENTE;

/*
EXERCICIO 11
RECUPERE O TOTAL DE DESCONTO CONCEDIDO POR CLIENTE APENAS DOS CLIENTES QUE TIVERAM UM DESCONTO
SUPERIOR A R$ 10,00.
UTILIZE O APELIDO "TOT. DESC. CONCEDIDO/CLIENTE".
O VALOR DO DESCONTO É OBTIDO PELO CÁLCULO: (VALOR TOTAL NF * PERCENTUAL DE DESCONTO) / 100.
O TOTAL DE DESCONTO É A SOMATÓRIA DOS VALORES DE DESCONTO CONCEDIDOS A CADA CLIENTE.
UTILIZE A FUNÇÃO DE GRUPO: SUM()
UTILIZE A CLÁUSULA HAVING PARA VALIDAÇÃO DO VALOR DO DESCONTO.
CRIE AGRUPAMENTOS POR CLIENTE.
*/
SELECT
  C.CD_CLIENTE "COD.CLIENTE",
  C.NM_CLIENTE "CLIENTE",
  SUM((N.VL_TOTAL_NF * N.VL_DESCONTO) / 100) "TOT. DESC. CONCEDIDO/CLIENTE"
FROM T_SPV_NOTA_FISCAL N INNER JOIN T_SPV_CLIENTE C ON (C.CD_CLIENTE = N.CD_CLIENTE)
GROUP BY C.CD_CLIENTE, C.NM_CLIENTE
HAVING SUM((N.VL_TOTAL_NF * N.VL_DESCONTO) / 100) > 10;

/*
EXERCICIO 12
RECUPERE O RAKNING DOS 10 CLIENTES COM MAIOR COMPRA.
MOSTRE O RANK, NOME DO CLIENTE E A SOMATÓRIA DAS COMPRAS (SOMATÓRIA DO VALOR DAS NOTAS FISCAIS
ADQUIRIDAS PELO CLIENTE).
UTILIZE OS APELIDOS:
- ROWNUM "RANK"
- NOME DO CLIENTE "CLIENTE"
- SOMATÓRIA DAS NOTAS FISCAIS "CLIENTE COM MAIOR COMPRA"
UTILIZE A FUNÇÃO DE GRUPO: SUM()
UTILIZE SUBQUERY.
CRIE AGRUPAMENTOS POR CLIENTE.
*/
SELECT
  C.NM_CLIENTE "CLIENTE",
  SUM(N.VL_TOTAL_NF) "CLIENTE COM MAIOR COMPRA"
FROM T_SPV_NOTA_FISCAL N INNER JOIN T_SPV_CLIENTE C ON (C.CD_CLIENTE = N.CD_CLIENTE)
GROUP BY C.CD_CLIENTE, C.NM_CLIENTE
ORDER BY "CLIENTE COM MAIOR COMPRA" DESC;

/*
EXERCICIO 13
RECUPERE O CLIENTE COM MAIOR COMPRA (RETORNAR APENAS UM CLIENTE).
MOSTRE O RANK, NOME DO CLIENTE E A SOMATÓRIA DAS COMPRAS (SOMATÓRIA DO VALOR DAS NOTAS FISCAIS
ADQUIRIDAS PELO CLIENTE).
UTILIZE OS APELIDOS:
- ROWNUM "RANK"
- NOME DO CLIENTE "CLIENTE"
- SOMATÓRIA DAS NOTAS FISCAIS "CLIENTE COM MAIOR COMPRA"
UTILIZE A FUNÇÃO DE GRUPO: SUM()
UTILIZE SUBQUERY.
CRIE AGRUPAMENTOS POR CLIENTE.
*/
SELECT
  C.NM_CLIENTE "CLIENTE",
  SUM(N.VL_TOTAL_NF) "CLIENTE COM MAIOR COMPRA"
FROM T_SPV_NOTA_FISCAL N INNER JOIN T_SPV_CLIENTE C ON (C.CD_CLIENTE = N.CD_CLIENTE)
WHERE  ROWNUM = 1
GROUP BY C.CD_CLIENTE, C.NM_CLIENTE
ORDER BY "CLIENTE COM MAIOR COMPRA" DESC;

/*
EXERCICIO 14
RECUPERE O RELATÓRIO DE VENDAS DOS PRODUTOS. RECUPERE OS PRODUTOS VENDIDOS OU NÃO (TODOS OS PRODUTOS).
MOSTRE O NOME DO PRODUTO E A QUANTIDADE VENDIDA.
UTILIZE O APELIDO "QUANTIDADE VENDIDA".
UTILIZE A FUNÇÃO DE GRUPO: SUM()
UTILIZE FULL OUTER JOIN
UTILIZE A FUNÇÃO NVL(SOMATÓRIA , 0) - CASO A SOMATÓRIA RETORNE UM NULO, CONVERTEREMOS O NULO
PARA 0 (ZERO).
NVL - CONVERTE UM VALOR NULO EM REAL
CRIE AGRUPAMENTOS POR PRODUTO.
*/

SELECT
  P.DS_PRODUTO,
  NVL(SUM(QT_VENDIDA), 0) "QUANTIDADE VENDIDA"
FROM
  T_SPV_PRODUTO P FULL OUTER JOIN T_SPV_ITEM_NOTA_FISCAL I ON (P.CD_PRODUTO = I.CD_PRODUTO)
GROUP BY P.DS_PRODUTO;

/*
EXERCICIO 15
RECUPERE O RANKING DOS 3 PRODUTOS MAIS VENDIDOS.
MOSTRE O RANK, NOME DO PRODUTO E A QUANTIDADE VENDIDA.
UTILIZE OS APELIDOS:
- ROWNUM "RANK"
- NOME DO CLIENTE "PRODUTO"
- SOMATÓRIA DAS NOTAS FISCAIS "QUANTIDADE VENDIDA"
UTILIZE A FUNÇÃO DE GRUPO: SUM()
UTILIZE SUBQUERY
UTILIZE A FUNÇÃO NVL(SOMATÓRIA , 0) - CASO A SOMATÓRIA RETORNE UM NULO, CONVERTEREMOS O NULO
PARA 0 (ZERO).
NVL - CONVERTE UM VALOR NULO EM REAL
CRIE AGRUPAMENTOS POR PRODUTO.
*/

SELECT
  P.DS_PRODUTO "PRODUTO",
  NVL(SUM(QT_VENDIDA), 0) "QUANTIDADE VENDIDA"
FROM
  T_SPV_PRODUTO P FULL OUTER JOIN T_SPV_ITEM_NOTA_FISCAL I ON (P.CD_PRODUTO = I.CD_PRODUTO)
WHERE ROWNUM <= 10
GROUP BY ROWNUM, P.DS_PRODUTO
ORDER BY "QUANTIDADE VENDIDA" DESC;

/*
EXERCICIO 16
RECUPERE O RANKING DOS 3 PRODUTOS MENOS VENDIDOS (AVALIAR TODOS OS PRODUTOS VENDIDOS OU NÃO).
MOSTRE O RANK, NOME DO PRODUTO E A QUANTIDADE VENDIDA.
UTILIZE OS APELIDOS:
- ROWNUM "RANK"
- NOME DO CLIENTE "PRODUTO"
- SOMATÓRIA DAS NOTAS FISCAIS "QUANTIDADE VENDIDA"
UTILIZE A FUNÇÃO DE GRUPO: SUM()
UTILIZE FULL OUTER JOIN
UTILIZE SUBQUERY
UTILIZE A FUNÇÃO NVL(SOMATÓRIA , 0) - CASO A SOMATÓRIA RETORNE UM NULO, CONVERTEREMOS O NULO
PARA 0 (ZERO).
NVL - CONVERTE UM VALOR NULO EM REAL
CRIE AGRUPAMENTOS POR PRODUTO.
*/
SELECT
  ROWNUM, R.PRODUTO, R."QUANTIDADE VENDIDA"
FROM
  (SELECT
    P.DS_PRODUTO "PRODUTO",
    NVL(SUM(QT_VENDIDA), 0) "QUANTIDADE VENDIDA"
  FROM
    T_SPV_PRODUTO P FULL OUTER JOIN T_SPV_ITEM_NOTA_FISCAL I ON (P.CD_PRODUTO = I.CD_PRODUTO)
  GROUP BY P.DS_PRODUTO
  ORDER BY "QUANTIDADE VENDIDA") R
WHERE
  ROWNUM < 4;

/*
EXERCICIO 17
RECUPERE O VALOR TOTAL DE CADA NOTA FISCAL.
MOSTRE O NÚMERO DA NOTA FISCAL E O VALOR DA NOTA FISCAL CALCULADO.
UTILIZE O APELIDO "VALOR TOTAL NF".
CÁLCULO DO VALOR DA NOTA FISCAL, É A SOMATÓRIA DO VALOR DE TODOS OS ITENS CONTIDOS NA NOTA
CÁLCULO DO VALOR DO ITEM DA NOTA FISCAL: QUANTIDADE VENDIDA * PREÇO UNITÁRIO
UTILIZE A FUNÇÃO DE GRUPO: SUM()
CRIE AGRUPAMENTOS POR NOTA FISCAL.
*/

SELECT 
  N.VL_TOTAL_NF "VALOR TOTAL NF",
  SUM(I.QT_VENDIDA * I.VL_PRECO_UNITARIO)
FROM
  T_SPV_NOTA_FISCAL N,
  T_SPV_ITEM_NOTA_FISCAL I
WHERE
  N.NR_NOTA_FISCAL = I.NR_NOTA_FISCAL
GROUP BY N.NR_NOTA_FISCAL, N.VL_TOTAL_NF;

