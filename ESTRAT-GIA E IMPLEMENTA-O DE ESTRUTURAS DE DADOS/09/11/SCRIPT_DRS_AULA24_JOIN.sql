-- JOIN --> JUNÇÃO DE 2 OU MAIS TABELAS
-- JUNÇÃO REGULAR, ONDE TEMOS A COMPARAÇÃO 
-- ENTRE CHAVE PRIMÁRIA E CHAVE ESTRANGEIRA.

-- JUNÇÃO CRUZADA => CROSS JOIN => PRODUTO CARTESIANO
-- TODAS AS LINHAS DA TABELA A SE ASSOCIAM COM TODAS AS LINHAS
-- DA TABELA B E VICE-VERSA.

-- ANTES DO PADRÃO SQL/99
 SELECT D.CD_DEPTO,
        D.NM_DEPTO,
        F.NR_MATRICULA,
        F.NM_FUNCIONARIO
   FROM T_SIP_DEPARTAMENTO D ,
        T_SIP_FUNCIONARIO  F;

-- PADRÃO SQL/99        
 SELECT D.CD_DEPTO,
        D.NM_DEPTO,
        F.NR_MATRICULA,
        F.NM_FUNCIONARIO
   FROM T_SIP_DEPARTAMENTO D CROSS JOIN T_SIP_FUNCIONARIO F;
   
-- JUNÇÃO INTERNA - NATURAL JOIN (O MESMO NOME E TIPO DE DADO)
-- INTERSECÇÃO DAS TABELAS, ONDE SERÃO RECUPERADAS TODAS AS LINHAS
-- DA TABELA A, QUE SE ASSOCIAM COM LINHAS DA TABELA B, E VICE-VERSA
-- PADRÃO SQL/99
 SELECT CD_DEPTO,
        D.NM_DEPTO,
        F.NR_MATRICULA,
        F.NM_FUNCIONARIO
   FROM T_SIP_DEPARTAMENTO D NATURAL JOIN T_SIP_FUNCIONARIO F;
   
-- EM UMA JUNÇÃO NATURAL, NÃO PODE UTILIZAR QUALIFICADOR
-- PARA O CAMPO/COLUNA CORRESPONDENTE A CHAVE PRIMÁRIA/CHAVE ESTRANGEIRA
-- O QUALIFICADOR ALTERA O NOME DO CAMPO.

-- JUNÇÃO INTERNA --> INNER JOIN (NOMES IGUAIS OU NÃO, TIPO DE DADO
-- IGUAL OU NÃO)
-- INTERSECÇÃO DAS TABELAS, ONDE SERÃO RECUPERADAS TODAS AS LINHAS
-- DA TABELA A, QUE SE ASSOCIAM COM LINHAS DA TABELA B, E VICE-VERSA
-- A COMPARAÇÃO ENTRE CHAVE PRIMÁRIA E CHAVE ESTRANGEIRA É EXPLICITA
-- ANTES DO PADRÃO SQL/99
SELECT  D.CD_DEPTO,
        D.NM_DEPTO,
        F.NR_MATRICULA,
        F.NM_FUNCIONARIO
   FROM T_SIP_DEPARTAMENTO D,
        T_SIP_FUNCIONARIO  F
  WHERE D.CD_DEPTO = F.CD_DEPTO; -- COMPARAÇÃO ENTRE CP=CE EXPLICITA
   
-- PADRÃO SQL/99
SELECT  D.CD_DEPTO,
        D.NM_DEPTO,
        F.NR_MATRICULA,
        F.NM_FUNCIONARIO
   FROM T_SIP_DEPARTAMENTO D INNER JOIN T_SIP_FUNCIONARIO F
        ON (D.CD_DEPTO = F.CD_DEPTO); -- COMPARAÇÃO ENTRE CP=CE EXPLICITA

-- EXEMPLO CONSULTANDO 3 TABELAS
 SELECT P.CD_PROJETO,
        P.NM_PROJETO,
        I.CD_PROJETO,
        I.NR_MATRICULA,
        F.NM_FUNCIONARIO,
        I.DT_ENTRADA,
        I.DT_SAIDA
   FROM T_SIP_PROJETO P INNER JOIN T_SIP_IMPLANTACAO I
        ON (P.CD_PROJETO = I.CD_PROJETO)
        INNER JOIN T_SIP_FUNCIONARIO F
        ON (F.NR_MATRICULA = I.NR_MATRICULA) ;
   
-- JUNÇÃO EXTERNA A ESQUERDA --> LEFT OUTER JOIN
-- RECUPERA TODAS AS LINHAS DA TABELA A ESQUERDA QUE SE ASSOCIAM OU 
-- NÃO COM LINHAS DA TABELA DA DIREITA
-- PADRÃO SQL/99
SELECT P.CD_PROJETO,
       P.NM_PROJETO,
       I.CD_PROJETO,
       I.DT_ENTRADA,
       I.DT_SAIDA
  FROM T_SIP_PROJETO P LEFT OUTER JOIN T_SIP_IMPLANTACAO I
       ON (P.CD_PROJETO = I.CD_PROJETO);

-- QUAIS PROJETOS NÃO ESTÃO EM IMPLANTAÇÃO?
SELECT P.CD_PROJETO,
       P.NM_PROJETO,
       I.CD_PROJETO,
       I.DT_ENTRADA,
       I.DT_SAIDA
  FROM T_SIP_PROJETO P LEFT OUTER JOIN T_SIP_IMPLANTACAO I
       ON (P.CD_PROJETO = I.CD_PROJETO)
 WHERE I.CD_PROJETO IS NULL; -- AVALIAR A CHAVE ESTRANGEIRA NULA

-- JUNÇÃO EXTERNA A DIREITA --> RIGHT OUTER JOIN
-- RECUPERA TODAS AS LINHAS DA TABELA A DIREITA QUE SE ASSOCIAM OU 
-- NÃO COM LINHAS DA TABELA DA ESQUERDA
-- PADRÃO SQL/99
 SELECT F.NR_MATRICULA,
        F.NM_FUNCIONARIO,
        I.NR_MATRICULA,
        I.DT_ENTRADA,
        I.DT_SAIDA
   FROM T_SIP_IMPLANTACAO I RIGHT OUTER JOIN T_SIP_FUNCIONARIO F
        ON (F.NR_MATRICULA = I.NR_MATRICULA);

-- QUAIS FUNCIONÁRIOS NÃO ESTÃO PARTICIPANDO DE IMPLANTAÇÕES?
SELECT F.NR_MATRICULA,
        F.NM_FUNCIONARIO,
        I.NR_MATRICULA,
        I.DT_ENTRADA,
        I.DT_SAIDA
   FROM T_SIP_IMPLANTACAO I RIGHT OUTER JOIN T_SIP_FUNCIONARIO F
        ON (F.NR_MATRICULA = I.NR_MATRICULA)
  WHERE I.NR_MATRICULA IS NULL; -- COMPARA A CHAVE ESTRANGEIRA NULA

   
SELECT * FROM T_SIP_FUNCIONARIO;
SELECT * FROM T_SIP_DEPARTAMENTO;